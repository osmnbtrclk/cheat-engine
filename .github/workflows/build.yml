name: build-test

on:
  pull_request:
  push:
    paths-ignore: [ "README.md" ]
    branches: [ "master", "releases/*" ]

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macos-latest]
        lazarus-versions: ["dist", "stable", "3.4", "2.2.6"]

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Install Lazarus
      uses: gcarreno/setup-lazarus@master
      with:
        lazarus-version: ${{ matrix.lazarus-versions }}
        include-packages: "Synapse 40.1"
        with-cache: false

    - name: Install Visual Studio Build Tools (Windows)
      if: ${{ matrix.operating-system == 'windows-latest' }}
      run: |
        if (-Not (Test-Path -Path "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin\MSBuild.exe")) {
          choco install visualstudio2019buildtools --version=16.11.7 --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --add Microsoft.VisualStudio.Component.Windows10SDK.19041 --includeRecommended --includeOptional --quiet --wait"
        }

    - name: Build Cheat Engine (Windows)
      if: ${{ matrix.operating-system == 'windows-latest' }}
      working-directory: ${{ github.workspace }}/Cheat Engine
      run: |
        & "C:\lazarus\lazbuild.exe" "cheatengine.lpi"

    

    - name: Find and build secondary projects
      run: |
        $files = Get-ChildItem -Path $env:GITHUB_WORKSPACE -Recurse -Include *.lpr,*.sln
        foreach ($file in $files) {
          if ($file.Extension -eq ".sln") {
            & "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin\MSBuild.exe" $file.FullName
          } else {
            lazbuild -B --bm=Release $file.FullName
          }
        }

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: built-artifacts
        path: ${{ github.workspace }}/Cheat Engine/bin